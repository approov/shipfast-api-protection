version: "2.3"

services:

  editor:
    image: ${IMAGE_NAME:-approov/shipfast-android-studio}:${ENVIRONMENT:-dev}_${ANDROID_STUDIO_VERSION:? Missing ANDROID_STUDIO_VERSION}
    build:
      context: ./docker/build
      dockerfile: editor.Dockerfile
      args:
        ANDROID_STUDIO_BUILD: "${ANDROID_STUDIO_BUILD:? Missing ANDROID_STUDIO_BUILD}"
        ANDROID_STUDIO_VERSION: "${ANDROID_STUDIO_VERSION:? Missing ANDROID_STUDIO_VERSION}"
    container_name: "${ENVIRONMENT:-dev}.editor"
    hostname: "${ENVIRONMENT:-dev}.editor"
    env_file:
      - .env
    environment:
      XAUTHORITY: /tmp/.docker.X11-unix
      DISPLAY: "${DISPLAY:-0:}"
    devices:
      - /dev/kvm:/dev/kvm
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ${PROJECT_HOST_DIR}/.docker.X11-unix:/tmp/.docker.X11-unix
      - ${PROJECT_HOST_DIR}/android-studio/${ANDROID_STUDIO_MAJOR_VERSION:? Missing ANDROID_STUDIO_VERSION}/${PROJECT_NAME}/.AndroidStudio${ANDROID_STUDIO_MAJOR_VERSION:? Missing ANDROID_STUDIO_VERSION}:/home/developer/.AndroidStudio${ANDROID_STUDIO_MAJOR_VERSION:? Missing ANDROID_STUDIO_VERSION}
      - ${PROJECT_HOST_DIR}/android-studio/${ANDROID_STUDIO_MAJOR_VERSION:? Missing ANDROID_STUDIO_VERSION}/${PROJECT_NAME}/Android:/home/developer/Android
      - ${PROJECT_HOST_DIR}/android-studio/${ANDROID_STUDIO_MAJOR_VERSION:? Missing ANDROID_STUDIO_VERSION}/${PROJECT_NAME}/.android:/home/developer/.android
      - ${PROJECT_HOST_DIR}/android-studio/${ANDROID_STUDIO_MAJOR_VERSION:? Missing ANDROID_STUDIO_VERSION}/${PROJECT_NAME}/.gradle:/home/developer/.gradle
      - ${PROJECT_HOST_DIR}/android-studio/${ANDROID_STUDIO_MAJOR_VERSION:? Missing ANDROID_STUDIO_VERSION}/${PROJECT_NAME}/.java:/home/developer/.java
      - ${PROJECT_HOST_DIR}/.mitmproxy:/home/developer/.mitmproxy
      - ${ANDROID_APP_DIR:-./}:/home/developer/workspace
    networks:
      - shipfast

  api:
    image: approov/shipfast-nodejs:${ENVIRONMENT:-dev}
    build:
      context: ./docker/build
      dockerfile: nodejs.Dockerfile
    restart: always
    container_name: "${ENVIRONMENT:-dev}.api"
    hostname: "${ENVIRONMENT:-dev}.api"
    working_dir: /home/node/workspace/server/shipfast-api
    env_file:
      - ./.env
    volumes:
      - ./:/home/node/workspace
    command:
      - npm
      - start
    networks:
      - shipfast
      - traefik
    ports:
      - 127.0.0.1:${SHIPFAST_HTTP_PORT}:${SHIPFAST_HTTP_PORT}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=${ENVIRONMENT:-dev}.shipfast-api"
      - "traefik.docker.network=traefik"
      - "traefik.port=${SHIPFAST_HTTP_PORT}"
      - "traefik.http.middlewares.corsheaders.headers.accesscontrolalloworigin=*"
      - "traefik.frontend.rule=Host:${SHIPFAST_PUBLIC_DOMAIN:-localhost}"

  web-api-key:
    image: approov/shipfast-nodejs:${ENVIRONMENT:-dev}
    build:
      context: ./docker/build
      dockerfile: nodejs.Dockerfile
    restart: always
    container_name: "${ENVIRONMENT:-dev}.web-api-key"
    hostname: "${ENVIRONMENT:-dev}.web-api-key"
    working_dir: /home/node/workspace/server/shipraider-rogue-web
    environment:
      - DEMO_STAGE=API_KEY_PROTECTION
      - SHIPRAIDER_HTTP_PORT=${SHIPRAIDER_API_KEY_HTTP_PORT? Missing SHIPRAIDER_API_KEY_HTTP_PORT}
    env_file:
      - .env
    volumes:
      - ./:/home/node/workspace
    command:
      - npm
      - start
    networks:
      - shipfast
      - traefik
    ports:
      - 127.0.0.1:${SHIPRAIDER_API_KEY_HTTP_PORT}:${SHIPRAIDER_API_KEY_HTTP_PORT}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=${ENVIRONMENT:-dev}.shipraider-web-api-key"
      - "traefik.docker.network=traefik"
      - "traefik.port=${SHIPRAIDER_API_KEY_HTTP_PORT}"
      - "traefik.frontend.headers.customResponseHeaders=Access-Control-Allow-Origin:${SHIPRAIDER_PUBLIC_DOMAIN:-localhost}"
      - "traefik.frontend.rule=Host:api-key.${SHIPRAIDER_PUBLIC_DOMAIN:-localhost}"

  web-static-hmac:
    image: approov/shipfast-nodejs:${ENVIRONMENT:-dev}
    build:
      context: ./docker/build
      dockerfile: nodejs.Dockerfile
    restart: always
    container_name: "${ENVIRONMENT:-dev}.web-static-hmac"
    hostname: "${ENVIRONMENT:-dev}.web-static-hmac"
    working_dir: /home/node/workspace/server/shipraider-rogue-web
    environment:
      - DEMO_STAGE=HMAC_STATIC_SECRET_PROTECTION
      - SHIPRAIDER_HTTP_PORT=${SHIPRAIDER_STATIC_HMAC_HTTP_PORT? Missing SHIPRAIDER_STATIC_HMAC_HTTP_PORT}
    env_file:
      - .env
    volumes:
      - ./:/home/node/workspace
    command:
      - npm
      - start
    networks:
      - shipfast
      - traefik
    ports:
      - 127.0.0.1:${SHIPRAIDER_STATIC_HMAC_HTTP_PORT}:${SHIPRAIDER_STATIC_HMAC_HTTP_PORT}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=${ENVIRONMENT:-dev}.shipraider-web-static-hmac"
      - "traefik.docker.network=traefik"
      - "traefik.port=${SHIPRAIDER_STATIC_HMAC_HTTP_PORT}"
      - "traefik.frontend.headers.customResponseHeaders=Access-Control-Allow-Origin:${SHIPRAIDER_PUBLIC_DOMAIN:-localhost}"
      - "traefik.frontend.rule=Host:static-hmac.${SHIPRAIDER_PUBLIC_DOMAIN:-localhost}"

  web-dynamic-hmac:
    image: approov/shipfast-nodejs:${ENVIRONMENT:-dev}
    build:
      context: ./docker/build
      dockerfile: nodejs.Dockerfile
    restart: always
    container_name: "${ENVIRONMENT:-dev}.web-dynamic-hmac"
    hostname: "${ENVIRONMENT:-dev}.web-dynamic-hmac"
    working_dir: /home/node/workspace/server/shipraider-rogue-web
    environment:
      - DEMO_STAGE=HMAC_DYNAMIC_SECRET_PROTECTION
      - SHIPRAIDER_HTTP_PORT=${SHIPRAIDER_DYNAMIC_HMAC_HTTP_PORT? Missing SHIPRAIDER_DYNAMIC_HMAC_HTTP_PORT}
    env_file:
      - .env
    volumes:
      - ./:/home/node/workspace
    command:
      - npm
      - start
    networks:
      - shipfast
      - traefik
    ports:
      - 127.0.0.1:${SHIPRAIDER_DYNAMIC_HMAC_HTTP_PORT}:${SHIPRAIDER_DYNAMIC_HMAC_HTTP_PORT}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=${ENVIRONMENT:-dev}.shipraider-web-dynamic-hmac"
      - "traefik.docker.network=traefik"
      - "traefik.port=${SHIPRAIDER_DYNAMIC_HMAC_HTTP_PORT}"
      - "traefik.frontend.headers.customResponseHeaders=Access-Control-Allow-Origin:${SHIPRAIDER_PUBLIC_DOMAIN:-localhost}"
      - "traefik.frontend.rule=Host:dynamic-hmac.${SHIPRAIDER_PUBLIC_DOMAIN:-localhost}"

  web-certificate-pinning:
    image: approov/shipfast-nodejs:${ENVIRONMENT:-dev}
    build:
      context: ./docker/build
      dockerfile: nodejs.Dockerfile
    restart: always
    container_name: "${ENVIRONMENT:-dev}.web-certificate-pinning"
    hostname: "${ENVIRONMENT:-dev}.web-certificate-pinning"
    working_dir: /home/node/workspace/server/shipraider-rogue-web
    environment:
      - DEMO_STAGE=CERTIFICATE_PINNING_PROTECTION
      - SHIPRAIDER_HTTP_PORT=${SHIPRAIDER_CERTIFICATE_PINNING_HTTP_PORT? Missing SHIPRAIDER_CERTIFICATE_PINNING_HTTP_PORT}
    env_file:
      - .env
    volumes:
      - ./:/home/node/workspace
    command:
      - npm
      - start
    networks:
      - shipfast
      - traefik
    ports:
      - 127.0.0.1:${SHIPRAIDER_CERTIFICATE_PINNING_HTTP_PORT}:${SHIPRAIDER_CERTIFICATE_PINNING_HTTP_PORT}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=${ENVIRONMENT:-dev}.shipraider-web-certificate-pinning"
      - "traefik.docker.network=traefik"
      - "traefik.port=${SHIPRAIDER_CERTIFICATE_PINNING_HTTP_PORT}"
      - "traefik.frontend.headers.customResponseHeaders=Access-Control-Allow-Origin:${SHIPRAIDER_PUBLIC_DOMAIN:-localhost}"
      - "traefik.frontend.rule=Host:certificate-pinning.${SHIPRAIDER_PUBLIC_DOMAIN:-localhost}"

  web-approov:
    image: approov/shipfast-nodejs:${ENVIRONMENT:-dev}
    build:
      context: ./docker/build
      dockerfile: nodejs.Dockerfile
    restart: always
    container_name: "${ENVIRONMENT:-dev}.web-approov"
    hostname: "${ENVIRONMENT:-dev}.web-approov"
    working_dir: /home/node/workspace/server/shipraider-rogue-web
    environment:
      - DEMO_STAGE=APPROOV_APP_AUTH_PROTECTION
      - SHIPRAIDER_HTTP_PORT=${SHIPRAIDER_APPROOV_HTTP_PORT? Missing SHIPRAIDER_APPROOV_HTTP_PORT}
    env_file:
      - .env
    volumes:
      - ./:/home/node/workspace
    command:
      - npm
      - start
    networks:
      - shipfast
      - traefik
    ports:
      - 127.0.0.1:${SHIPRAIDER_APPROOV_HTTP_PORT}:${SHIPRAIDER_APPROOV_HTTP_PORT}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=${ENVIRONMENT:-dev}.shipraider-web-approov"
      - "traefik.docker.network=traefik"
      - "traefik.port=${SHIPRAIDER_APPROOV_HTTP_PORT}"
      - "traefik.frontend.headers.customResponseHeaders=Access-Control-Allow-Origin:${SHIPRAIDER_PUBLIC_DOMAIN:-localhost}"
      - "traefik.frontend.rule=Host:approov.${SHIPRAIDER_PUBLIC_DOMAIN:-localhost}"

networks:
  shipfast:
    driver: "bridge"
  traefik:
    external: true
